CheML date="2016-01-21" time="16:30:29" version="1.2.0"

# Note: don't mix parameters and send&recv tokens in one line
# Note: don't make a short loop on only one function!
# Note: only one input per available legal input can be received
# Note: send: >> var id
# Note: recv: >> id var


## Enter Data
                << host = pandas                 << function = read_table

                < filepath_or_buffer = 'benchmarks/sykhere/ML_Ring8.csv'
                << sep=','
                << header = 0
                << skiprows = 0
                >> df 0

##
                << host = cheml                 << function = Split
                << selection = ['Homo']
                >> 0 df   >> df1 2


## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/descriptors/8R/HTT/27k.csv'

                << sep=','
                << header = None
                << skiprows = 0
                >> df 1

## Script
                        << host = cheml           << function = PyScript
                        << l0 = "print 'df:', df1.shape"
                        < l1 = "print df1.columns"
                        < l2 = "print df1.describe()"
                        << l3 = "print 'df2:', df2.shape"
                        << l4 = "print df2.describe()"
                        >> 1 df1    >> 2 df2

## Preprocessor
                        << host = cheml             << function = MissingValues
                        << string_as_null = True    << missing_values = ['Nan']
                        << inf_as_null = True       << strategy = 'ignore_row'
                        >> 1 dfx >> 2 dfy  >> dfx 3  >> dfy 4

## Script
                        << host = cheml           << function = PyScript
                        << l0 = "print 'dfx:', df1.shape"
                        << l1 = "print 'dfy:', df2.shape"
                        < l2 = "print df1.describe()"
                        >> 3 df1 >> 4 df2


-------------------------- ML
## Define Model
                        << host = sklearn        << function = MLPRegressor
                        << func_method = None
                        < hidden_layer_sizes = (128,64,32)
                        < activation = 'tanh'
                        << solver = 'adam'
                        < alpha = 0.0001
                        << batch_size = 'auto'
                        << learning_rate = 'invscaling'
                        << max_iter = 100000
                        << random_state = None
                        << shuffle = True
                        << tol = 1e-4
                        << learning_rate_init = 0.001
                        << power_t = 0.5
                        << early_stopping = True

                        >> api 101

## Search
                << host = sklearn      << function = GridSearchCV

                              << estimator = '@estimator'
                              << param_grid = {'hidden_layer_sizes':((128,64,32),(100,50)), 'activation':('logistic', 'tanh'),'alpha':(0.001,0.0001)}
                              << scoring = None
                              << fit_params = None
                              << n_jobs = 10
                              << pre_dispatch = '2*n_jobs'
                              << iid = True
                              << cv = None
                              << refit = True
                              << verbose = 0
                              << error_score = 'raise'
                              << return_train_score = True

                >> 3 dfx      >> 4 dfy   >> 101 estimator
                >> best_estimator_ 102  >> cv_results_ 103


## Define Model
                        << host = sklearn        << function = MLPRegressor
                        << func_method = 'predict'


                        >> 3 dfx    >> 102 api
                        >> dfy_pred 104


## Postprocessor
                << host = sklearn      << function = Evaluate_Regression
                              << r2_score = True
                              << r2_sample_weight = None       << r2_multioutput = None

                              << mean_absolute_error = True
                              << mae_sample_weight = None       << mae_multioutput = "uniform_average"

                              << median_absolute_error = True

                              << mean_squared_error = True
                              << mse_sample_weight = None       << mse_multioutput = "uniform_average"

                              << root_mean_squared_error = True
                              << rmse_sample_weight = None       << rmse_multioutput = "uniform_average"

                              << explained_variance_score = True
                              << ev_sample_weight = None       << ev_multioutput = "uniform_average"

                > Note: can not pass multiple inputs
                >> 4 dfy     >> 104 dfy_pred   >> evaluation_results_  1047


## Script
                        << host = cheml           << function = PyScript
                        << l0 = "print var1"

                        >> 1047 var1

## Output
                << host = cheml                 << function = SaveFile

                << filename = 'all_data_prediction_eval'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 1047 df

## Output
                << host = cheml                 << function = SaveFile

                << filename = 'cv_results'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 103 df

--------------------------------------------------------------------------
test other files: 4

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/ML_Ring4.csv'
                << sep=','
                << header = 0
                << skiprows = 0
                >> df 500

##
                << host = cheml                 << function = Split
                << selection = ['Homo']
                >> 500 df   >> df1 501

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/descriptors/4R/HTT/27k.csv'

                << sep=','
                << header = None
                << skiprows = 0
                >> df 50

## Define Model
                        << host = sklearn        << function = MLPRegressor
                        << func_method = predict

                        >> 50 dfx   >> 102 api

                        >> dfy_pred 503


## Postprocessor
                << host = sklearn      << function = Evaluate_Regression
                              << r2_score = True
                              << r2_sample_weight = None       << r2_multioutput = None

                              << mean_absolute_error = True
                              << mae_sample_weight = None       << mae_multioutput = "uniform_average"

                              << median_absolute_error = True

                              << mean_squared_error = True
                              << mse_sample_weight = None       << mse_multioutput = "uniform_average"

                              << root_mean_squared_error = True
                              << rmse_sample_weight = None       << rmse_multioutput = "uniform_average"

                              << explained_variance_score = True
                              << ev_sample_weight = None       << ev_multioutput = "uniform_average"

                > Note: can not pass multiple inputs
                >> 501 dfy     >> 503 dfy_pred   >> evaluation_results_  5037

## Script
                        << host = cheml           << function = PyScript
                        << l0 = "print var1"

                        >> 5037 var1

## Output
                << host = cheml                 << function = SaveFile

                << filename = '4'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 5037 df

--------------------------------------------------------------------------
test other files: 5

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/ML_Ring5.csv'
                << sep=','
                << header = 0
                << skiprows = 0
                >> df 5006

##
                << host = cheml                 << function = Split
                << selection = ['Homo']
                >> 5006 df   >> df1 5016

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/descriptors/5R/HTT/27k.csv'

                << sep=','
                << header = None
                << skiprows = 0
                >> df 506

## Define Model
                        << host = sklearn        << function = MLPRegressor
                        << func_method = predict

                        >> 506 dfx   >> 102 api

                        >> dfy_pred 5036


## Postprocessor
                << host = sklearn      << function = Evaluate_Regression
                              << r2_score = True
                              << r2_sample_weight = None       << r2_multioutput = None

                              << mean_absolute_error = True
                              << mae_sample_weight = None       << mae_multioutput = "uniform_average"

                              << median_absolute_error = True

                              << mean_squared_error = True
                              << mse_sample_weight = None       << mse_multioutput = "uniform_average"

                              << root_mean_squared_error = True
                              << rmse_sample_weight = None       << rmse_multioutput = "uniform_average"

                              << explained_variance_score = True
                              << ev_sample_weight = None       << ev_multioutput = "uniform_average"

                > Note: can not pass multiple inputs
                >> 5016 dfy     >> 5036 dfy_pred   >> evaluation_results_  50376

## Script
                        << host = cheml           << function = PyScript
                        << l0 = "print var1"

                        >> 50376 var1

## Output
                << host = cheml                 << function = SaveFile

                << filename = '5'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 50376 df

--------------------------------------------------------------------------
test other files: 6

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/ML_Ring6.csv'
                << sep=','
                << header = 0
                << skiprows = 0
                >> df 5007

##
                << host = cheml                 << function = Split
                << selection = ['Homo']
                >> 5007 df   >> df1 5017

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/descriptors/6R/HTT/27k.csv'

                << sep=','
                << header = None
                << skiprows = 0
                >> df 507

## Define Model
                        << host = sklearn        << function = MLPRegressor
                        << func_method = predict

                        >> 507 dfx   >> 102 api

                        >> dfy_pred 503777


## Postprocessor
                << host = sklearn      << function = Evaluate_Regression
                              << r2_score = True
                              << r2_sample_weight = None       << r2_multioutput = None

                              << mean_absolute_error = True
                              << mae_sample_weight = None       << mae_multioutput = "uniform_average"

                              << median_absolute_error = True

                              << mean_squared_error = True
                              << mse_sample_weight = None       << mse_multioutput = "uniform_average"

                              << root_mean_squared_error = True
                              << rmse_sample_weight = None       << rmse_multioutput = "uniform_average"

                              << explained_variance_score = True
                              << ev_sample_weight = None       << ev_multioutput = "uniform_average"

                > Note: can not pass multiple inputs
                >> 5017 dfy     >> 503777 dfy_pred   >> evaluation_results_  50377

## Script
                        << host = cheml           << function = PyScript
                        << l0 = "print var1"

                        >> 50377 var1

## Output
                << host = cheml                 << function = SaveFile

                << filename = '6'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 50377 df

--------------------------------------------------------------------------
test other files: 7

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/ML_Ring7.csv'
                << sep=','
                << header = 0
                << skiprows = 0
                >> df 5008

##
                << host = cheml                 << function = Split
                << selection = ['Homo']
                >> 5008 df   >> df1 5018

## Enter Data
                << host = pandas                 << function = read_table

                << filepath_or_buffer = 'benchmarks/sykhere/descriptors/7R/HTT/27k.csv'

                << sep=','
                << header = None
                << skiprows = 0
                >> df 508

## Define Model
                        << host = sklearn        << function = MLPRegressor
                        << func_method = predict

                        >> 508 dfx   >> 102 api

                        >> dfy_pred 5038


## Postprocessor
                << host = sklearn      << function = Evaluate_Regression
                              << r2_score = True
                              << r2_sample_weight = None       << r2_multioutput = None

                              << mean_absolute_error = True
                              << mae_sample_weight = None       << mae_multioutput = "uniform_average"

                              << median_absolute_error = True

                              << mean_squared_error = True
                              << mse_sample_weight = None       << mse_multioutput = "uniform_average"

                              << root_mean_squared_error = True
                              << rmse_sample_weight = None       << rmse_multioutput = "uniform_average"

                              << explained_variance_score = True
                              << ev_sample_weight = None       << ev_multioutput = "uniform_average"

                > Note: can not pass multiple inputs
                >> 5018 dfy     >> 5038 dfy_pred   >> evaluation_results_  50378

## Script
                        << host = cheml           << function = PyScript
                        << l0 = "print var1"

                        >> 50378 var1

## Output
                << host = cheml                 << function = SaveFile

                << filename = '7'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 50378 df




---------------------------------
# Preprocessor
                        << host = cheml         << function = Constant
                        >> 3 df >> df 5 >> removed_columns_ 6

# Script
                        << host = cheml           << function = PyScript
                        << l0 = "print 'df1 after preprocess:', df1.shape"
                        < l1 = "print var1"
                        >> 5 df1   >> 6 var1

# Output
                << host = cheml                 << function = SaveFile

                << filename = 'constant_features'
                << output_directory = 'removed_features'
                << record_time = False
                << format ='csv'
                << index = False
                << header = False
                >> 6 df

# Divider
                        << host = sklearn             << function = Train_Test_Split
                        << test_size = 0.1             << train_size = None
                        << random_state = None          << stratify = None
                        >> 3 dfx   >> 4 dfy     >> dfx_train 17  >> dfx_test 18  >> dfy_train 19  >> dfy_test 20

# Script
                        << host = cheml           << function = PyScript
                        << l0 = "df_out1 = pd.DataFrame(df1.describe())"
                        << l1 = "df_out2 = pd.DataFrame(df2.describe())"
                        >> 19 df1   >> 20 df2  >> df_out1 27   >> df_out2 28
                        >> 17 var1  >> 18 var2

# Output
                << host = cheml                 << function = SaveFile

                << filename = 'y_train_describe_1:9'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 27 df

# Output
                << host = cheml                 << function = SaveFile

                << filename = 'y_test_describe_1:9'
                << output_directory = 'results'
                << record_time = False
                << format ='csv'
                << index = True
                << header = True
                >> 28 df

# Define Model
                        << host = sklearn        << function = MLPRegressor
                        << func_method = fit   < func_method = 'fit', 'predict', None
                        << hidden_layer_sizes = (128,64,32)
                        << activation = 'tanh'
                        << solver = 'adam'
                        << alpha = 0.0001
                        << batch_size = 'auto'
                        << learning_rate = 'invscaling'
                        << max_iter = 100000
                        << random_state = None
                        << shuffle = True
                        << tol = 1e-4
                        << learning_rate_init = 0.001
                        << power_t = 0.5
                        << early_stopping = True

                        >> 17 dfx   >> 19 dfy

                        >> api 101
                        >> dfy_pred 102
---------------------------------