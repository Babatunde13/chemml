CheML date="2016-01-21" time="16:30:29" version="1.1.0"

# Note: don't mix parameters and send&recv tokens in one line
# Note: don't make a short loop on only one function!
# Note: only one input per available legal input can be received
# Note: send: >> var id
# Note: recv: >> id var

## DataRepresentation
                << module = cheml                 << function = RDKitFingerprint

                << removeHs = True                << FPtype = 'Morgan'
                << vector = 'bit'                 << nBits = 1024
                << radius = 2                     << molfile = ''
                << path = None                    << arguments = [0,0]

                >> X 0

## Input
                << module = cheml                 << function = File

				<< filepath = 'benchmarks/test_data/sample_data_0.csv'
				<< header = None
				<< skiprows = 0
				<< skipcolumns = 0


## Output
                

## Preprocessor
                        << module == sklearn    << function = StandardScaler
                        << copy = True          << with_mean = True
                        << with_std = True

## Preprocessor
                        << module == sklearn   << function = MinMaxScaler
                        << feature_range = (0,1)    << copy = True

## Preprocessor
                        << module == sklearn   << function = MaxAbsScaler
                        << copy = True

## Preprocessor
                        << module == sklearn   << function = RobustScaler
                        << with_centering = True    << with_scaling = True
                        << copy = True

## Preprocessor
                        << module == sklearn   << function = Normalizer
                        << norm = 'l2'  << copy = True

## Preprocessor
                        << module == sklearn   << function = Binarizer
                        << threshold = 0.0      << copy = True

## Preprocessor
                        << module == sklearn   << function = OneHotEncoder
                        << n_values = 'auto'    << categorical_features = 'all'
                        << dtype = np.float   << sparse = True
                        << handle_unknown = 'error'

# FeatureSelection

# FeatureTransformation

# Divider

# Evaluation

## Regression
                << module = sklearn      << function = SVR

                              << kernel = 'rbf'
                              << degree s= 3
                              << gamma = 'auto'
                              << coef0 = 0.0
                              << tol = 1e-3
                              << C = 1.0
                              << epsilon = 0.1
                              << shrinking = True
                              << cache_size = 200
                              << verbose = False
                              << max_iter = -1

                >> 3 X   >> api 4

## Visualization
                >> 4 api  >> fake 5


