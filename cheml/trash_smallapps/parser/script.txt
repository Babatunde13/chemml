## INPUT [<type 'str'>]
    %% target_path = 'benchmarks/homo_dump/sample_50/homo_50.csv' [<type 'str'>]
    %% data_skiprows = 0 [<type 'str'>]
    %% target_skiprows = 0 [<type 'str'>]
    %% data_path = 'benchmarks/homo_dump/sample_50/data_NOsmi_50.csv' [<type 'str'>]
    %% data_delimiter = None [<type 'str'>]
    %% target_delimiter = None [<type 'str'>]
    %% target_header = None [<type 'str'>]
    %% data_header = 0 [<type 'str'>]
## OUTPUT [<type 'str'>]
    %% filename_errorfile = 'error.txt' [<type 'str'>]
    %% path = 'CheML.out' [<type 'str'>]
    %% filename_pyscript = 'CheML_PyScript.py' [<type 'str'>]
    %% filename_logfile = 'log.txt' [<type 'str'>]
## MISSING_VALUES [<type 'str'>]
    %% strategy = 'mean' [<type 'str'>]
    %% inf_as_null = True [<type 'str'>]
    %% string_as_null = True [<type 'str'>]
    %% missing_values = False [<type 'str'>]
## StandardScaler [<type 'str'>]
    %% copy = True [<type 'str'>]
    %% with_mean = True [<type 'str'>]
    %% with_std = True [<type 'str'>]
## MinMaxScaler [<type 'str'>]
    %% copy = True [<type 'str'>]
    %% feature_range = (0,1) [<type 'str'>]
## MaxAbsScaler [<type 'str'>]
    %% copy = True [<type 'str'>]
## RobustScaler [<type 'str'>]
    %% with_centering = True [<type 'str'>]
    %% copy = True [<type 'str'>]
    %% with_scaling = True [<type 'str'>]
## Normalizer [<type 'str'>]
    %% copy = True [<type 'str'>]
    %% norm = 'l2' [<type 'str'>]
## Binarizer [<type 'str'>]
    %% threshold = 0.0 [<type 'str'>]
    %% copy = True [<type 'str'>]
## OneHotEncoder [<type 'str'>]
    %% dtype = np.float [<type 'str'>]
    %% handle_unknown = 'error' [<type 'str'>]
    %% sparse = True [<type 'str'>]
    %% categorical_features = 'all' [<type 'str'>]
    %% n_values = 'auto' [<type 'str'>]
## PolynomialFeatures [<type 'str'>]
    %% include_bias = True [<type 'str'>]
    %% interaction_only = False [<type 'str'>]
    %% degree = 2 [<type 'str'>]
## FunctionTransformer [<type 'str'>]
    %% validate = True [<type 'str'>]
    %% accept_sparse = False [<type 'str'>]
    %% func = None [<type 'str'>]
    %% pass_y = False [<type 'str'>]
## VarianceThreshold [<type 'str'>]
    %% threshold = 0.0 [<type 'str'>]
## SelectKBest [<type 'str'>]
    %% k = 10 [<type 'str'>]
    %% score_func = f_regression [<type 'str'>]
## SelectPercentile [<type 'str'>]
    %% percentile = 10 [<type 'str'>]
    %% score_func = f_regression [<type 'str'>]
## SelectFpr [<type 'str'>]
    %% alpha = 0.05 [<type 'str'>]
    %% score_func = f_regression [<type 'str'>]
## SelectFdr [<type 'str'>]
    %% alpha = 0.05 [<type 'str'>]
    %% score_func = f_regression [<type 'str'>]
## SelectFwe [<type 'str'>]
    %% alpha = 0.05 [<type 'str'>]
    %% score_func = f_regression [<type 'str'>]
## RFE [<type 'str'>]
    %% step = 1 [<type 'str'>]
    %% estimator = '' [<type 'str'>]
    %% verbose = 0 [<type 'str'>]
    %% estimator_params = None [<type 'str'>]
    %% n_features_to_select = None [<type 'str'>]
## RFECV [<type 'str'>]
    %% scoring = None [<type 'str'>]
    %% verbose = 0 [<type 'str'>]
    %% step = 1 [<type 'str'>]
    %% estimator_params = None [<type 'str'>]
    %% estimator = '' [<type 'str'>]
    %% cv = None [<type 'str'>]
